apiVersion: v1
kind: List
metadata:
  name: "perceptor-scan components" 
  resourceVersion: "1"
items:
- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: perceptor
    namespace: perceptor-scan
    labels:
      app: perceptor-core
  spec:
    replicas: 1
    selector:
      name: bds-perceptor
    template:
      metadata:
        labels:
          name: bds-perceptor
        name: perceptor
        namespace: perceptor-scan
      spec:
        volumes:
          - emptyDir: {}
            name: "var-images"
          - name: dir-docker-socket
            hostPath:
              path: /var/run/docker.sock
        containers:
          - name: perceptor
            image: mfenwickbd/perceptor:latest
            imagePullPolicy: Always
            command:
              - ./dependencies/perceptor
            ports:
              - containerPort: 3000
            resources:
              requests:
                memory: 2Gi
                cpu: 50m
              limits:
                cpu: 500m
  #          env:
  #          - name: ENV1
  #             value: 
  #          - name: ENV2
  #            value: 
            volumeMounts:
#              - mountPath: /opt/blackduck/perceptor/logs
#                name: dir-perceptor-log
#              - mountPath: /var/images
#                name: dir-image
              - mountPath: /var/run/docker.sock
                name: dir-docker-socket
            terminationMessagePath: /dev/termination-log
            securityContext:
              privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: perceptor-scan
        serviceAccount: perceptor-scan
# not sure if this is actually necessary
      securityContext:
        privileged: true
- apiVersion: v1
  kind: Service
  metadata:
    name: perceptor
    namespace: perceptor-scan      
  spec:
    selector:                  
      name: bds-perceptor
    ports:
    - nodePort: 0
      port: 3001            
      protocol: TCP
      targetPort: 3000